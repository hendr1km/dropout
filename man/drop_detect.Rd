% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drop_detect.R
\name{drop_detect}
\alias{drop_detect}
\title{Detecting Dropouts}
\usage{
drop_detect(data, last_col)
}
\arguments{
\item{data}{dataframe or tibble to detect dropouts.}

\item{last_col}{Index position or column name of the last survey item. This is an optional argument and is needed if there are other columns in your dataframe after the survey items you want to detect the dropout for.}
}
\value{
A dataframe or tibble containing the following for each row of your dataset: A logical whether a dropout has been detected and, if so, the column name where it occurs and the index of the column.
}
\description{
The function detects participants who drop out of the survey by recognising NA sequences up to the last question of the survey. The column of the dropout is also determined, as well as the respective index of the column. This forms the basis for various methods of dropout analysis.
}
\examples{
# detecting dropouts with the index position 50 as the last question column
drop_detect(df, last_col = 50)

# counting dropouts by gender
df \%>\%
 drop_detect(last_col = "question_50") \%>\%
 bind_cols(df,.) \%>\%
 group_by(gender) \%>\%
 count(dropout)

# mean age of participants who did not drop out
df \%>\%
 drop_detect() \%>\%
 select(dropout) \%>\%
 bind_cols(df,.) \%>\%
 filter(dropout = FALSE) \%>\%
 summarise(mean_age = mean(age))

# subsample for the first 8 questions without dropouts
subsample <-
 df |>
 drop_detect() \%>\%
 bind_cols(df,.) \%>\%
 filter(dropout = FALSE | dropout_index > 8) \%>\%
 select(1:8)

# comparing the count of dropouts for two sections of the survey
df \%>\%
drop_detect(last_col = 35) \%>\%
select(dropout_index) \%>\%
mutate(section = case_when(dropout_index >= 5 & dropout_index <= 20 ~ "Section_1",
       dropout_index >=21 & dropout_index <=35 ~ "Section_2")) \%>\%
         count(section) \%>\%
         filter(!is.na(section))


 # Read more about possible use cases in the vignette :)
}
